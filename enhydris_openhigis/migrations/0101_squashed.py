# Generated by Django 2.2.15 on 2020-10-19 11:10

from io import StringIO

import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.db.models.deletion
from django.core.management import call_command
from django.db import IntegrityError, connection, migrations, models, transaction


def create_garea_categories(apps, schema_editor):
    @transaction.atomic
    def _create(id, descr):
        try:
            GareaCategory.objects.create(id=id, descr=descr)
        except IntegrityError:
            pass

    GareaCategory = apps.get_model("enhydris", "GareaCategory")
    _create(id=2, descr="Water districts")
    _create(id=3, descr="River basins")
    _create(id=4, descr="Drainage basins")
    _create(id=5, descr="Station basins")
    _create(id=5, descr="Standing waters")

    # Reset the id sequence
    sqlsequencereset = StringIO()
    call_command("sqlsequencereset", "enhydris", "--no-color", stdout=sqlsequencereset)
    sqlsequencereset.seek(0)
    reset_sequence = [
        line for line in sqlsequencereset if '"enhydris_gareacategory"' in line
    ]
    assert len(reset_sequence) == 1
    with connection.cursor() as cursor:
        cursor.execute(reset_sequence[0])


class Migration(migrations.Migration):

    replaces = [
        ("enhydris_openhigis", "0001_initial"),
        ("enhydris_openhigis", "0002_remove_water_district_length_and_area"),
        ("enhydris_openhigis", "0003_rename_water_district_to_river_basin_district"),
        ("enhydris_openhigis", "0004_geom2100"),
        ("enhydris_openhigis", "0005_riverbasin"),
        ("enhydris_openhigis", "0006_drainagebasin"),
        ("enhydris_openhigis", "0007_imported_id"),
        ("enhydris_openhigis", "0008_imported_id_part_b"),
        ("enhydris_openhigis", "0009_drainagebasin_riverbasin"),
        ("enhydris_openhigis", "0010_remove_useless_fields_from_riverbasin"),
        ("enhydris_openhigis", "0011_stationbasin"),
        ("enhydris_openhigis", "0012_limit_stations_to_openhi"),
        ("enhydris_openhigis", "0013_standingwater_watercourse"),
        ("enhydris_openhigis", "0014_basin_multitable_inheritance"),
        ("enhydris_openhigis", "0015_surface_water_multitable_inheritance"),
        ("enhydris_openhigis", "0016_add_fields_to_station"),
        ("enhydris_openhigis", "0017_hydronode"),
        ("enhydris_openhigis", "0018_stationbasin_unique_station"),
        ("enhydris_openhigis", "0019_fix_foreignkey_stationbasin_river_basin"),
        ("enhydris_openhigis", "0020_max_river_length"),
    ]

    initial = True

    dependencies = [
        ("enhydris", "0025_gentity_geom"),
    ]

    operations = [
        migrations.CreateModel(
            name="RiverBasinDistrict",
            fields=[
                (
                    "garea_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris.Garea",
                    ),
                ),
                (
                    "geom2100",
                    django.contrib.gis.db.models.fields.GeometryField(srid=2100),
                ),
                ("imported_id", models.IntegerField(unique=True)),
            ],
            bases=("enhydris.garea",),
        ),
        migrations.CreateModel(
            name="Basin",
            fields=[
                (
                    "garea_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris.Garea",
                    ),
                ),
                ("imported_id", models.IntegerField(unique=True)),
                (
                    "geom2100",
                    django.contrib.gis.db.models.fields.GeometryField(srid=2100),
                ),
                ("man_made", models.BooleanField(blank=True, null=True)),
                ("mean_slope", models.FloatField(blank=True, null=True)),
                ("mean_elevation", models.FloatField(blank=True, null=True)),
                ("max_river_length", models.FloatField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris.garea", models.Model),
        ),
        migrations.CreateModel(
            name="RiverBasin",
            fields=[
                (
                    "basin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris_openhigis.Basin",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris_openhigis.basin", models.Model),
        ),
        migrations.CreateModel(
            name="DrainageBasin",
            fields=[
                (
                    "basin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris_openhigis.Basin",
                    ),
                ),
                (
                    "river_basin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris_openhigis.RiverBasin",
                    ),
                ),
                ("hydro_order", models.CharField(blank=True, max_length=50)),
                ("hydro_order_scheme", models.CharField(blank=True, max_length=50)),
                ("hydro_order_scope", models.CharField(blank=True, max_length=50)),
                ("total_area", models.FloatField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris_openhigis.basin", models.Model),
        ),
        migrations.RunPython(code=create_garea_categories),
        migrations.CreateModel(
            name="SurfaceWater",
            fields=[
                (
                    "gentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris.Gentity",
                    ),
                ),
                ("imported_id", models.IntegerField(unique=True)),
                (
                    "geom2100",
                    django.contrib.gis.db.models.fields.GeometryField(srid=2100),
                ),
                ("local_type", models.CharField(max_length=50)),
                ("man_made", models.BooleanField(blank=True, null=True)),
                (
                    "river_basin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris_openhigis.RiverBasin",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris.gentity", models.Model),
        ),
        migrations.CreateModel(
            name="StandingWater",
            fields=[
                (
                    "surfacewater_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris_openhigis.SurfaceWater",
                    ),
                ),
                ("elevation", models.FloatField(blank=True, null=True)),
                ("mean_depth", models.FloatField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris_openhigis.surfacewater", models.Model),
        ),
        migrations.CreateModel(
            name="HydroNode",
            fields=[
                (
                    "gpoint_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris.Gpoint",
                    ),
                ),
                ("imported_id", models.IntegerField(unique=True)),
                (
                    "geom2100",
                    django.contrib.gis.db.models.fields.GeometryField(srid=2100),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris.gpoint", models.Model),
        ),
        migrations.CreateModel(
            name="Watercourse",
            fields=[
                (
                    "surfacewater_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris_openhigis.SurfaceWater",
                    ),
                ),
                ("hydro_order", models.CharField(blank=True, max_length=50)),
                ("hydro_order_scheme", models.CharField(blank=True, max_length=50)),
                ("hydro_order_scope", models.CharField(blank=True, max_length=50)),
                ("min_width", models.FloatField(blank=True, null=True)),
                ("max_width", models.FloatField(blank=True, null=True)),
                (
                    "start_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watercourses_starting",
                        to="enhydris_openhigis.HydroNode",
                    ),
                ),
                (
                    "end_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watercourses_ending",
                        to="enhydris_openhigis.HydroNode",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris_openhigis.surfacewater", models.Model),
        ),
        migrations.CreateModel(
            name="Station",
            fields=[
                (
                    "station_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris.Station",
                    ),
                ),
                (
                    "geom2100",
                    django.contrib.gis.db.models.fields.GeometryField(srid=2100),
                ),
                (
                    "basin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris_openhigis.Basin",
                    ),
                ),
                (
                    "surface_water",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris_openhigis.SurfaceWater",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris.station", models.Model),
        ),
        migrations.RunSQL(
            sql=(
                "INSERT INTO enhydris_openhigis_station(station_ptr_id, geom2100) "
                "SELECT gpoint_ptr_id, ST_Transform(g.geom, 2100) "
                "FROM enhydris_station s, enhydris_gentity g "
                "WHERE g.id=s.gpoint_ptr_id;"
            ),
            reverse_sql="",
        ),
        migrations.CreateModel(
            name="StationBasin",
            fields=[
                (
                    "geom2100",
                    django.contrib.gis.db.models.fields.GeometryField(srid=2100),
                ),
                (
                    "river_basin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris_openhigis.RiverBasin",
                    ),
                ),
                (
                    "station",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="enhydris_openhigis.Station",
                    ),
                ),
                ("max_river_length", models.FloatField(blank=True, null=True)),
                (
                    "garea_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="enhydris.Garea",
                    ),
                ),
                ("man_made", models.BooleanField(blank=True, null=True)),
                ("mean_elevation", models.FloatField(blank=True, null=True)),
                ("mean_slope", models.FloatField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("enhydris.garea", models.Model),
        ),
    ]
